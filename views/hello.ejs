<!DOCTYPE html>
<html>
<head>
    <title>My Page</title>
    <!-- 引入 Bootstrap CSS -->
    <link rel="stylesheet" href="/static/bootstrap/dist/css/bootstrap.min.css">
    <script src="/static/jquery/dist/jquery.min.js"></script>
</head>


<style>
    body {
        background-color: #E6EBF0;
    }
    html {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    .col-lg-12 {
        width: 80%;
        margin-top: 20px;
        margin-left: auto;
        margin-right: auto;
    }

</style>

<body>
    <div class="col-lg-12 bg-info bg-gradient rounded p-3" style="--bs-bg-opacity: .5">
        <h3>課程總覽</h3>
        <form class="row" id="courseSelectForm" action="/getCourses">
            <% grades.forEach(grade =>{ %> 
                <div id="<%= grade %>" class="row">
                    <h3>
                        <input type="checkbox" onchange="selectAll(this)" name="grade" class='form-check-input' value="<%= grade %>"/>
                        <%= grade %><%= choose["semester"] %>
                    </h3>
                    <% nameList[choose["semester"]].forEach((item) => { %>
                    <%  let name = item["name"], tags = item["tags"]; 
                        if (!item["tags"].includes(grade) ){
                            return;
                        }
                    %>
                        <div class="col-auto">
                            <div class="form-check">
                                <label class="form-check-label" for="<%= name %>"><%= name %></label>
                                <input onchange="CourseChange(this)"  class="form-check-input" type="checkbox" name="course" value="<%= name %>" <%= choose["courses"].includes(name) ? "checked" : ""%> >
                            </div>
                        </div>
                    <%});%>
                </div>
            <%})%>
        </form>
    </div>
    <div class="col-lg-12">
        <form action="/" method="post">
            <select name="grade" class="form-control">
                <% grades.forEach(grade =>{ %> 
                    <option value="<%= grade %>" <%= choose["grade"] == grade ? "selected" : ""%>><%= grade %></option>
                <% }) %>
            </select>

            <select name="semester" class="form-control">
                <% semesters.forEach(semester =>{ %> 
                    <option value="<%= semester %>" <%= choose["semester"] == semester ? "selected" : ""%>><%= semester %></option>
                <% }) %>
            </select>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <div class="col-lg-12">
        <h1><%=choose["grade"]%><%=choose["semester"]%>課表</h1> 
        <h2>總學分:<span id="credits">0</span></h2>
        <h2>衝突課程:<span id="conflict"></span></h2>
        <table class="table table-striped table-light table-bordered custom-table">
            <% let weekdays = ["星期一", "星期二", "星期三", "星期四", "星期五"]; 
               let classPeriod = ["1", "2", "3", "4","午休","5", "6", "7", "8", "9", "10"]; %>
            <thead>
                <th id="diagonal-cell"></th>
                <% weekdays.forEach((item, index) => { %>
                    <th id="weekday-<%= index+1 %>" ><%= item %></th>
                <% }) %>
            </thead>

            <tbody>
                <% classPeriod.forEach((periodItem) => { %>
                    <tr>
                        <td><%= periodItem %></td>
                        <% weekdays.forEach((item, weekdayIndex) => { %>
                            <td id="<%=`weekday-${weekdayIndex+1}-period-${periodItem}`%>"></td>
                        <% }) %>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Bootstrap 需要的 JavaScript 和依赖 -->
    <script src="/static/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<script>
    class Courses {
        constructor(courseList=[]) {
            this.courseList = courseList;
            this.conflictList =new  Set();
        }

        cleanAll() {
            for (let i = 1; i <= 5; i++) {
                for (let j = 1; j <= 10; j++) {
                    $(`#weekday-${i}-period-${j}`).empty();
                }
            }
            $("#credits").text(0);
        }

        updateAll() {
            this.conflictList.clear();
            for( let i = 1; i <= 5; i++) {
                for (let j = 1; j <= 10; j++) {
                    let queryString = `#weekday-${i}-period-${j}`;
                    let courses = $(queryString).children();
                    if (courses.length > 1) {
                        courses.css("color", "red");

                        courses.each((index, element) => {
                            let courseName = $(element).attr("id");
                            this.conflictList.add(courseName);
                        });
                    }
                    else {
                        courses.css("color", "black");
                    }
                }
            }
            this.updateConflict();
        }

        updateSingleCourse(courseParams) {
            if( !this.courseList.includes(courseParams) ) {
                this.courseList.push(courseParams);
            }
            const name = courseParams["name"];
            $(`#courseSelectForm input[value=${name}]`).prop("checked", true);

            const teachName = courseParams["teacher"]["name"];
            $("#credits").text(parseInt($("#credits").text()) + parseInt(courseParams["credits"]));

            courseParams["schedules"].forEach((schedule) => {
                let intervals = schedule["intervals"];
                const weekday = schedule["weekday"];
                intervals.forEach((interval)=>{
                    let period = interval == 'X' ? 10  : interval;
                    let queryString = `#weekday-${weekday}-period-${period}`;
                    // add text on it
                    $(queryString).append(`<div id=${name}>${name}(${teachName})</div>`)
                });
            });
        }

        removeSingleCourse(courseName) {
            $(`#${courseName}`).remove();
            this.updateAll();
        }


        updateCourse(courseList) {
            this.cleanAll();
            courseList.forEach((data) => {
                this.updateSingleCourse(data);
            });
            this.updateAll();
        }

        reloadCourse(courseList) {
            this.courseList = [];
            this.cleanAll();
            this.updateCourse(courseList);
        }

        updateConflict() {
            $("#conflict").text(Array.from(this.conflictList).join(","));;
        }
    };


</script>

<script>

let courses = new Courses();
let courseList = <%- data %>; 
courses.reloadCourse(courseList);




</script>

<script>
    function CourseChange(element) {
        if( element['checked'] ) {
            let courseName = element['value'];
            let url = "/getCourses";
            $.ajax({
                url: url,
                type: "POST",
                data: {
                    courses: [courseName],
                    grade: '<%= choose["grade"] %>',
                    semester: '<%= choose["semester"] %>'
                },
                success: function(data){
                    courses.updateSingleCourse(data[0]);
                    courses.updateAll();
                }
            });
        } else {
            let courseName = element['value'];
            courses.removeSingleCourse(courseName);
            courses.updateAll();
        }
    }

    function selectAll(element) {
        let grade = $(element).val();
        let courses = $(`#${grade}`).find("input[name='course']");
        if(element["checked"] ) {
            courses.each((index, element) => {
                element.checked = true;
                CourseChange(element);
            });
        } else {
            courses.each((index, element) => {
                element.checked = false;
                CourseChange(element);
            });
        }
    }
</script>